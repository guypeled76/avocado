

extend type Mutation {
    createIngredient(input: NewIngredient!): Ingredient!
    updateIngredient(input: UpdateIngredient!) : Result
    deleteIngredient(input: DeleteIngredient!) : Result

    createRecipe(input: NewRecipe!): Recipe!
    updateRecipe(input: UpdateRecipe!) : Result
    deleteRecipe(input: DeleteRecipe!) : Result

    createMeal(input: NewMeal!): Meal!
    updateMeal(input: UpdateMeal!) : Result
    deleteMeal(input: DeleteMeal!) : Result
}

extend type Query {
    ingredients: [Ingredient!]!
    meals:[Meal!]!
    recipes:[Recipe!]!
}

type Meal {
    id: ID!
    name: String!
    hashtags:[HashTag!]!
    recipes:[Recipe!]!
    createdBy: ID!
    createdAt: Timestamp!
    deletedAt: Timestamp
}

input NewMeal {
    name: String!
    hashtags:[ID!]!
}

input UpdateMeal {
    id: String!
    name: String
    hashtags:[ID!]!
}

input DeleteMeal {
    id: String!
}

type Recipe {
    id: ID!
    name: String!
    hashtags:[HashTag!]!
    ingredients:[Ingredient!]!
    createdBy: ID!
    createdAt: Timestamp!
    updatedAt: Timestamp!
    deletedAt: Timestamp
}

input NewRecipe {
    name: String!
    hashtags:[ID!]!
}

input UpdateRecipe {
    id: String!
    name: String
    hashtags:[ID!]!
}

input DeleteRecipe {
    id: String!
}

type Ingredient {
    id: ID!
    name: String!
    hashtags:[HashTag!]!
    createdBy: ID!
    createdAt: Timestamp!
    deletedAt: Timestamp
}



input NewIngredient {
    name: String!
    hashtags:[ID!]!
}

input UpdateIngredient {
    id: String!
    name: String
    hashtags:[ID!]!
}

input DeleteIngredient {
    id: String!
}