
extend type Mutation {
    createWaterfall(input: NewWaterfall!): Waterfall!
    updateWaterfall(input: UpdateWaterfall!) : Result
    deleteWaterfall(input: DeleteWaterfall!) : Result
}

extend type Query {
    waterfallByUserId(waterfallId:ID!): Waterfall!
}

type Waterfall {
    id: ID!
    text: String!
    hashtags:[Hashtag!]!
    events:[WaterfallEvent!]!
    createdBy:User
    createdAt:Timestamp!
    updatedAt:Timestamp!
    updatedBy:User
    deletedAt:Timestamp
    deletedBy:User
}

input UpdateWaterfall {
    id:String!
    text: String!
    hashtags:[ID!]!
}

input DeleteWaterfall {
    id:String!
}


input NewWaterfall {
    text: String!
    hashtags:[ID!]!
}

type WaterfallEvent {
    id: ID!
    text: String!
    hashtags:[Hashtag!]!
    createdBy:User
    createdAt:Timestamp!
    updatedAt:Timestamp!
    updatedBy:User
    deletedAt:Timestamp
    deletedBy:User
}

