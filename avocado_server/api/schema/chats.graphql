

extend type Mutation {
    createChat(input: NewChat!) : Chat!

    createMessage(input: NewMessage!) : Message!
    updateMessage(input: UpdateMessage!) : Result
    deleteMessage(messageId: ID!) : Result

    createReply(input: NewReply!) : Reply!
    updateReply(input: UpdateReply!) : Result
    deleteReply(messageId: ID!) : Result
}

extend type Query {
    chatsByUserId(userID:ID!): [Chat!]!
    chatById(chatID:ID!): Chat!
}


type Chat {
    id: ID!
    createdAt:Timestamp!
    messages(filter: ResultsFilter!):[Message!]!
}

input NewChat {
    description:String
}

type Message {
    id: ID!
    text: String!
    replies: [Reply!]!
    createdBy: User!
    createAt: Timestamp!
    updatedAt: Timestamp!
    deletedAt: Timestamp
}

input UpdateMessage {
    id: ID!
    text: String
}

input NewMessage {
    chat: ID!
    text: String!
}

type Reply {
    id: ID!
    text: String!
    createdBy: User!
    createAt: Timestamp!
    updatedAt: Timestamp!
    deletedAt: Timestamp
}

input UpdateReply {
    id: ID!
    text: String
}

input NewReply {
    chat: ID!
    text: String!
}