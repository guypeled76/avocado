

extend type Mutation {
    createUser(input:NewUser!): User
    updateUser(input:UpdateUser!): Result
    deleteUser(id:ID!): Result

}

extend type Query {
    users(filter:ResultsFilter) : [User!]!
    userById(id:ID!): User!
}

input NewUser {
    name: String!
    displayName: String!
    email: String!
    thumbnail:String
    image:String
    video:String
}

type User {
    id: ID!
    name: String!
    displayName: String!
    email: String!
    thumbnail:String
    image:String
    video:String
    hashtags:[Hashtag!]!
    notifications: [Notification!]!
    measurements(input:ResultsFilter): [Measurement!]!
    resources(filter:ResultsFilter): [Resource!]!
    chat: Chat!
    createdAt: Timestamp!
    updatedAt: Timestamp!
    deletedAt: Timestamp
}

input UpdateUser {
    id: ID!
    name: String
    displayName: String
    email: String
    thumbnail:String
    image:String
    video:String
    hashtags:[ID!]
    profile: UpdateDependentResource
}
