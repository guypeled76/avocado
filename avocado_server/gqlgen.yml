schema: api/schema/*.graphql

# Let gqlgen know where to put the generated server
exec:
  filename: api/graph/generated.go
  package: graph

# Let gqlgen know where to the generated models (if any)
model:
  filename: api/model/generated.go
  package: apimodel

# Optional, turns on resolver stub generation
resolver:
  filename: api/resolver.go # where to write them
  type: Resolver  # whats the resolver root implementation type called?

# Tell gqlgen about any existing models you want to reuse for
# graphql. These normally come from the db or a remote api.
models:
  ID:
    model: github.com/99designs/gqlgen/graphql.IntID
  Timestamp:
    model: github.com/gremlinsapps/avocado_server/api/graph.Timestamp
  Hashtag:
    fields:
      createdBy:
        resolver: true
  User:
    fields:
      notifications:
        resolver: true
      hashtags:
        resolver: true
      chat:
        resolver: true
      image:
        resolver: true
      measurements:
        resolver: true
  Resource:
    fields:
      chat:
        resolver: true
      createdBy:
        resolver: true
  Post:
    fields:
      chat:
        resolver: true
      hashtags:
        resolver: true
      createdBy:
        resolver: true
  Chat:
    fields:
      messages:
        resolver: true
  Message:
    fields:
      messages:
        resolver: true
      resource:
        resolver: true
      createdBy:
        resolver: true
  Reply:
    fields:
      resource:
        resolver: true
      createdBy:
        resolver: true
  Measurement:
    fields:
      results:
        resolver: true
      hashtags:
        resolver: true
      chat:
        resolver: true
  MeasurementResult:
    fields:
      chat:
        resolver: true
